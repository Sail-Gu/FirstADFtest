{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFchainplandev01"
		},
		"trigger_eventtriggerdemo01_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/e63f786f-80ef-4a49-86ff-1d3629fb8574/resourceGroups/research-ligentix/providers/Microsoft.Storage/storageAccounts/dbastorageaccounttest"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeDFparameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flowDFparameterrize",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfParameter",
								"type": "DataFlowReference",
								"parameters": {
									"DFparaCountry": {
										"value": "'@{pipeline().parameters.ParacountryPipeline}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"sourceEmployeeCSV": {},
									"sinkOutputCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParacountryPipeline": {
						"type": "string",
						"defaultValue": "\"HK\""
					}
				},
				"folder": {
					"name": "StudyDemo"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T05:20:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineCache')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flowCache",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowCacheSink",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceLocalEmployee": {},
									"sourceEmployee": {},
									"sourceAzureSQLCountry": {},
									"sinkCache": {},
									"sinkcountryCache": {},
									"sinkAzureSQLLigentixEssentialService": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "StudyDemo"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-25T08:45:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineCallAggregrateDFL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flowAggregate",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_Aggregate",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmployee": {},
									"sourceDept": {},
									"sinktoCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T07:42:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineDFValidation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow DFValication",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfValidation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcetestcsv": {},
									"sinkOurputValidationCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "StudyDemo"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-21T11:32:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineDFstringify')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flowDFstringify",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfStringify",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceDemojson": {},
									"sinkOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "StudyDemo"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-27T00:02:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineExecDFConditionSplit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Conditional split",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfConditionalSplit",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmployee": {},
									"sinkAll": {},
									"sinkHRemployee": {},
									"sinkPayrollemployee": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T01:23:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineExecDataflowFirstTry')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow for First try",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowFirsttry",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmployee": {},
									"sourceDeptment": {},
									"sinkOutData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T03:34:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineExecDerivedColumn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Derivedcolumn",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowDerivedcolumn",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmployee": {},
									"sinkCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-16T01:43:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineExecdfAlterRow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Alter row",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfAlterRow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmployeeWindow": {},
									"sinkAzurechainplaintest": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-19T05:44:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineFilterDataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow call Filter",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_Filter",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceDept": {},
									"sinkCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-15T07:07:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson10WritelogtoFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WaitStart",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3
						}
					},
					{
						"name": "Get MetadataLogfile",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set variableLogfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ADFRealLesson10",
								"type": "DatasetReference",
								"parameters": {
									"LogFileDS": {
										"value": "@variables('Filename')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Set variableLogfile",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WaitStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Filename",
							"value": {
								"value": "@concat(formatDateTime(utcnow(),'yyyy-MM-dd'),'_log.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If ConditionLogfilenameExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get MetadataLogfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get MetadataLogfile').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dataflowLesson10",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "dataflowLesson10",
											"type": "DataFlowReference",
											"parameters": {
												"DataFactory": {
													"value": "'@{pipeline().DataFactory}'",
													"type": "Expression"
												},
												"PipeLine": {
													"value": "'@{pipeline().Pipeline}'",
													"type": "Expression"
												},
												"RunId": {
													"value": "'@{pipeline().RunId}'",
													"type": "Expression"
												},
												"TriggerName": {
													"value": "'@{pipeline().TriggerName}'",
													"type": "Expression"
												},
												"TriggerTime": {
													"value": "'@{pipeline().TriggerTime}'",
													"type": "Expression"
												},
												"TriggerType": {
													"value": "'@{pipeline().TriggerType}'",
													"type": "Expression"
												},
												"Status": {
													"value": "'@{'Success'}'",
													"type": "Expression"
												},
												"CurrentTime": {
													"value": "'@{utcnow()}'",
													"type": "Expression"
												},
												"DF_logfile": {
													"value": "'@{variables('Filename')}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"sourceDummy": {},
												"sinkLogfile": {
													"LogFileDS": {
														"value": "@variables('Filename')",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "dataflowLesson10_Append",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "dataflowLesson10_Append",
											"type": "DataFlowReference",
											"parameters": {
												"DataFactory": {
													"value": "'@{pipeline().DataFactory}'",
													"type": "Expression"
												},
												"PipeLine": {
													"value": "'@{pipeline().Pipeline}'",
													"type": "Expression"
												},
												"RunId": {
													"value": "'@{pipeline().RunId}'",
													"type": "Expression"
												},
												"TriggerName": {
													"value": "'@{pipeline().TriggerName}'",
													"type": "Expression"
												},
												"TriggerTime": {
													"value": "'@{pipeline().TriggerTime}'",
													"type": "Expression"
												},
												"TriggerType": {
													"value": "'@{pipeline().TriggerType}'",
													"type": "Expression"
												},
												"Status": {
													"value": "'@{'Success'}'",
													"type": "Expression"
												},
												"CurrentTime": {
													"value": "'@{utcnow()}'",
													"type": "Expression"
												},
												"DF_logfile": {
													"value": "'@{variables('Filename')}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"sourceDummy": {},
												"sourceLogfile": {
													"LogFileDS": {
														"value": "@variables('Filename')",
														"type": "Expression"
													}
												},
												"sinkLogfile": {
													"LogFileDS": {
														"value": "@variables('Filename')",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-01T02:11:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson33LoadCSVtoJSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflowLesson33LoadCSVtoJSON",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowLesson33LoadCSVtoJSON",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceCustCSV": {},
									"sinkJson": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T03:54:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson34SynaPassExplressionToDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Filerule",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DSFilerule",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Filerule",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Filerule').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "dataflowLesson34PassExpression",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "dataflowLesson34PassExpression",
											"type": "DataFlowReference",
											"parameters": {
												"FileExpression": {
													"value": "'@{item().rule}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"sourceFileName": {
													"Filename": {
														"value": "@item().filename",
														"type": "Expression"
													}
												},
												"sinkoutputfile": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "None",
										"cacheSinks": {
											"firstRowOnly": true
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T08:12:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson35')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Lesson35",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowLesson35",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceSource": {},
									"sourceTarget": {},
									"sinkNotexisted": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T09:17:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson43DynamicSQLPara')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select WaterMark from dbo.Lesson43test where Uname='oooo'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTableParaSchemaTable",
								"type": "DatasetReference",
								"parameters": {
									"SchemaInput": "dbo",
									"TableInput": "Lesson43test"
								}
							}
						}
					},
					{
						"name": "Set variable WaterMark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookupWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ParaWaterMark",
							"value": {
								"value": "\\'@{activity('LookupWaterMark').output.firstRow.WaterMark}\\'",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Data flow Input Watermark",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable WaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowLesson43InputDynamicSQLpara",
								"type": "DataFlowReference",
								"parameters": {
									"dfInputWatermark": {
										"value": "'@{variables('ParaWaterMark')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"sourceAzureSQLWatermark": {},
									"sinkCache": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ParaWaterMark": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-07T07:26:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinedfWriteCacheSinktoPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flowdfWriteCacheSinktoPipeline",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfWriteCacheSinktoPipeline",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmployee": {},
									"sinkMaxSalaryCache": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "Set variableMaxSalaryFromDataflow",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Data flowdfWriteCacheSinktoPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipeMaxSalary",
							"value": {
								"value": "@string(activity('Data flowdfWriteCacheSinktoPipeline').output.runStatus.output.sinkMaxSalaryCache.value[0].MaxSary)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"PipeMaxSalary": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-26T01:56:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_eventtriggerdemo01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_copydata",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/data/blobs/Input/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('trigger_eventtriggerdemo01_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfAKVtest')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "StudyDemo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DSdptmentAKVtest",
								"type": "DatasetReference"
							},
							"name": "sourceAKVstorage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CSVoutputJoinemployeedept",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceAKVstorage",
						"sourceAKVstorage sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['kkkk.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		}
	]
}