{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFchainplandev01"
		},
		"AzureSqlDatabasechainPlain_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabasechainPlain'"
		},
		"Linkedservice_dbastoreaccounttest_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Linkedservice_dbastoreaccounttest'"
		},
		"AzureKeyVault_storagetest_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-Chainplan-test.vault.azure.net/"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://restapi.adequateshop.com"
		},
		"RestServiceWEB_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dummy.restapiexample.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FirstCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WaitWaitseconds",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": {
								"value": "@pipeline().parameters.waitseconds",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"waitseconds": {
						"type": "int"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T01:59:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PLappendVariable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ListOfInput",
							"value": {
								"value": "@pipeline().parameters.paraINput",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Append variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('ListOfInput'),'abc' )\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WaitFalse",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Waittrue",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Append variable2",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Append variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ListOfInput",
							"value": "\"OK\",\"NOK\""
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"paraINput": {
						"type": "string",
						"defaultValue": "ParaINput"
					}
				},
				"variables": {
					"ListOfInput": {
						"type": "Array",
						"defaultValue": [
							"abc",
							"de",
							"ghk"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-10T07:32:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineFailactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "'failtest'",
							"errorCode": "2000"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "StudyDemo"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-26T01:24:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineGlobalParameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": {
								"value": "@pipeline().globalParameters.GlobalParaInputWaitseconds",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "StudyDemo"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-25T02:13:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson27Round')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable round",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RoundNumber",
							"value": {
								"value": "@string(div(float(split(string(mul(123.45325, 100)),'.')[0]),100))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"RoundNumber": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-04T03:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson29FailureActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Set1",
							"value": "ok"
						}
					},
					{
						"name": "Set variable1-1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Set1",
							"value": {
								"value": "@int('1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1-1-1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Set1",
							"value": "good idea"
						}
					},
					{
						"name": "Send email set1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable1-1-1",
								"dependencyConditions": [
									"Skipped",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Send email set2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait Dummy",
								"dependencyConditions": [
									"Skipped",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "set2",
							"value": "it's ok"
						}
					},
					{
						"name": "Set variable2-2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "set2",
							"value": {
								"value": "@int('1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2-2-2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "set2",
							"value": "what?"
						}
					},
					{
						"name": "Wait Dummy",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable2-2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable2-2-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Set1": {
						"type": "String"
					},
					"set2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-05T01:51:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson30Failuretaken')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Set1",
							"value": {
								"value": "@int('1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1-1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Set1",
							"value": {
								"value": "@int('1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1-1-1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Set1",
							"value": "good idea"
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "set2",
							"value": "it's ok"
						}
					},
					{
						"name": "Set variable2-2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "set2",
							"value": {
								"value": "@int('1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2-2-2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "set2",
							"value": {
								"value": "@int('1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait Dummy",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable2-2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable2-2-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Set variable Message1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1-1-1",
								"dependencyConditions": [
									"Skipped",
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ErrorMessageSet1",
							"value": {
								"value": "@concat(activity('Set variable1')?.Error?.message,'|',\n        activity('Set variable1-1')?.Error?.message,'|',\n        activity('Set variable1-1-1')?.Error?.message)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable Message2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait Dummy",
								"dependencyConditions": [
									"Skipped",
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ErrorMessageSet2",
							"value": {
								"value": "@concat(activity('Set variable2')?.Error?.message,'|',\n        activity('Set variable2-2')?.Error?.message,'|',\n        activity('Set variable2-2-2')?.Error?.message,'|',\n        activity('Wait Dummy')?.Error?.message)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Set1": {
						"type": "String"
					},
					"set2": {
						"type": "String"
					},
					"ErrorMessageSet1": {
						"type": "String"
					},
					"ErrorMessageSet2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-05T03:00:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson37WeekdayOr not')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable Today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Today",
							"value": {
								"value": "@string(dayOfWeek(utcNow()))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition Weekday",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable Today",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains('12345',variables('Today'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait Weekend",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@int(variables('Today'))",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait Weekday",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@int(variables('Today'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Today": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T09:31:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineLesson38CallbyLogicApp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WaitCallfromLogicApp",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": {
								"value": "@pipeline().globalParameters.GlobalParaInputWaitseconds",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"WaitSeconds": {
						"type": "int"
					}
				},
				"folder": {
					"name": "ADF_Real"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-06T01:52:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineWebActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@variables('WebAddress')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://dummy.restapiexample.com/api/v1/create",
							"body": {
								"name": "Mike",
								"salary": "99",
								"age": "99"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"WebAddress": {
						"type": "String",
						"defaultValue": "https://dummy.restapiexample.com/api/v1/employees"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-12-13T03:09:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_GitSecond')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait_second",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-04T12:26:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Github_firsttest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-04T12:35:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_SetVariable_activity20241103')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable Filename",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileType",
							"value": {
								"value": "@replace(pipeline().parameters.FileName,'Sailes.csv','')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition FileName",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable Filename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('FileType'),' Hourly')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set variableNo",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "IfNotGetValue",
										"value": {
											"value": "@concat(variables('FileType'),'inNoCondition')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variableYes",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "IfYesGetValue",
										"value": {
											"value": "@concat(variables('FileType'),'_inYesCondition')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"variables": {
					"FileType": {
						"type": "String"
					},
					"IfYesGetValue": {
						"type": "String"
					},
					"IfNotGetValue": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Trigger_test20241031"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-03T10:11:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_lesson10-15')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Tablenames')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Tablenames": {
						"type": "Array",
						"defaultValue": [
							"ok",
							"nok",
							"test"
						]
					}
				},
				"folder": {
					"name": "AllAboutBI"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T07:42:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_scheduletrigger_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait 180s",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 420
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Trigger_test20241031"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-31T11:36:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_storagetest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_storagetest_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabasechainPlain')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabasechainPlain_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linkedservice_dbastoreaccounttest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"DatastoreAccount"
				],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Linkedservice_dbastoreaccounttest_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceWEB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceWEB_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		}
	]
}