{
	"name": "dfExistsTrans",
	"properties": {
		"folder": {
			"name": "StudyDemo"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DSemployeeCSV",
						"type": "DatasetReference"
					},
					"name": "sourceEmployee"
				},
				{
					"dataset": {
						"referenceName": "DSdeptmentCSV",
						"type": "DatasetReference"
					},
					"name": "sourceDept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CSVoutputJoinemployeedept",
						"type": "DatasetReference"
					},
					"name": "sinkOutput"
				}
			],
			"transformations": [
				{
					"name": "existsDept"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          name as string,",
				"          country as string,",
				"          deptment as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceEmployee",
				"source(output(",
				"          depid as string,",
				"          depname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceDept",
				"sourceEmployee, sourceDept exists(deptment == depid,",
				"     negate:true,",
				"     broadcast: 'auto')~> existsDept",
				"existsDept sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmployeeExists.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkOutput"
			]
		}
	}
}